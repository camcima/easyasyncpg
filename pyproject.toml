[tool.poetry]
name = "easyasyncpg"
version = "0.1.0"
description = "EasyAsyncPG"
authors = ["Carlos Cima"]
readme = "README.md"
license = "MIT"
packages = [{ include = "easyasyncpg"}]

[tool.poetry.dependencies]
python = "^3.11"
asyncpg = "^0.28.0"
pytest-asyncio = "^0.21.1"


[tool.poetry.group.dev.dependencies]
pytest = "^7.4.2"
ruff = "^0.0.292"
python-dotenv = "^1.0.0"
coverage = "^7.3.2"
mypy = "^1.6.0"
asyncpg-stubs = "^0.28.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
select = [
    "A", # flake8-builtins
    "B", # flake8-bugbear
    "BLE", # flake8-blind-except
    "C4", # flake8-comprehensions
    "C90", # mccabe
    "D", # pydocstyle
    "DJ", # flake8-django
    "DTZ", # flake8-datetimez
    "E", # pycodestyle errors
    "ERA", # eradicate
    "EXE", # flake8-executable
    "F", # pyflakes
    "G", # flake8-logging-format
    "I", # isort
    "ICN", # flake8-import-conventions
    "ISC", # flake8-implicit-str-concat
    "N", # pep8-naming
    "PIE", # flake8-pie
    "PLC", # pylint - convention
    "PLE", # pylint - error
    "PLW", # pylint - warning
    "PTH", # flake8-use-pathlib
    "Q", # flake8-quotes
    "RET", # flake8-return
    "RUF", # Ruff-specific rules
    "S", # flake8-bandit
    "SIM", # flake8-simplify
    "T10", # flake8-debugger
    "T20", # flake8-print
    "TCH", # flake8-type-checking
    "TID", # flake8-tidy-imports
    "UP", # pyupgrade
    "W", # pycodestyle - warning
    "YTT", # flake8-2020
]
ignore = [
    "B008", # flake8-bugbear - do not perform function calls in argument defaults
    "D100", # pydocstyle - missing docstring in public module
    "D101", # pydocstyle - missing docstring in public class
    "D102", # pydocstyle - missing docstring in public method
    "D103", # pydocstyle - missing docstring in public function
    "D104", # pydocstyle - missing docstring in public package
    "D105", # pydocstyle - missing docstring in magic method
    "D106", # pydocstyle - missing docstring in public nested class
    "D107", # pydocstyle - missing docstring in __init__
    "D202", # pydocstyle - no blank lines allowed after function docstring
    "D205", # pydocstyle - 1 blank line required between summary line and description
    "D211", # pydocstyle - no blank lines allowed before class docstring
    "D213", # pydocstyle - no blank lines allowed between summary line and description
    "D415", # pydocstyle - first line should end with a period, question mark, or exclamation point
    "A003", # flake8-builtins - class attribute {name} is shadowing a python builtin
    "B010", # flake8-bugbear - do not call setattr with a constant attribute value
    "RUF012", # Ruff-specific rule
]
line-length = 88
src = ["app", "tests"]
target-version = "py311"

[tool.ruff.per-file-ignores]
"tests/**/*.py" = [
    "S101", # flake8-bandit - use of assert detected
]
